name: nodejs
on:
  workflow_call:
    inputs:
      nodejs:
        type: string
        required: true
  workflow_dispatch:
env:
  frontend: ./ui
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Node.js ${{ inputs.nodejs }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodejs }}
      - name: Install
        run: yarn install
        working-directory: ${{ env.frontend }}
      - name: Build
        run: yarn build
        working-directory: ${{ env.frontend }}
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodejs }}
      - name: Get yarn cache
        id: yarn-cache
        run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> "${GITHUB_OUTPUT}"
        working-directory: ${{ env.frontend }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache.outputs.YARN_CACHE_DIR }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
        working-directory: ${{ env.frontend }}
      - run: yarn build
        working-directory: ${{ env.frontend }}
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
      - run: yarn deploy
        working-directory: ${{ env.frontend }}